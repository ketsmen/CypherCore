// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/club_membership_listener.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Club.V1.Membership {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/club_membership_listener.proto</summary>
  public static partial class ClubMembershipListenerReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/club_membership_listener.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClubMembershipListenerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBiZ3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJlcnNoaXBfbGlzdGVuZXIu",
            "cHJvdG8SH2Jncy5wcm90b2NvbC5jbHViLnYxLm1lbWJlcnNoaXAaImJncy9s",
            "b3cvcGIvY2xpZW50L2NsdWJfdHlwZXMucHJvdG8aN2Jncy9sb3cvcGIvY2xp",
            "ZW50L2dsb2JhbF9leHRlbnNpb25zL2ZpZWxkX29wdGlvbnMucHJvdG8aOWJn",
            "cy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL21lc3NhZ2Vfb3B0",
            "aW9ucy5wcm90bxo4YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lv",
            "bnMvbWV0aG9kX29wdGlvbnMucHJvdG8aOWJncy9sb3cvcGIvY2xpZW50L2ds",
            "b2JhbF9leHRlbnNpb25zL3NlcnZpY2Vfb3B0aW9ucy5wcm90byKOAQoVQ2x1",
            "YkFkZGVkTm90aWZpY2F0aW9uEjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnBy",
            "b3RvY29sLmNsdWIudjEuTWVtYmVySWQSQwoKbWVtYmVyc2hpcBgDIAEoCzIv",
            "LmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJNZW1iZXJzaGlwRGVzY3JpcHRp",
            "b24i4gEKF0NsdWJSZW1vdmVkTm90aWZpY2F0aW9uEjAKCGFnZW50X2lkGAEg",
            "ASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSMQoJbWVtYmVy",
            "X2lkGAMgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSDwoH",
            "Y2x1Yl9pZBgEIAEoBBJRCgZyZWFzb24YBSABKA4yJy5iZ3MucHJvdG9jb2wu",
            "Y2x1Yi52MS5DbHViUmVtb3ZlZFJlYXNvbjoYQ0xVQl9SRU1PVkVEX1JFQVNP",
            "Tl9OT05FIpEBCiNSZWNlaXZlZEludml0YXRpb25BZGRlZE5vdGlmaWNhdGlv",
            "bhIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1l",
            "bWJlcklkEjgKCmludml0YXRpb24YAyABKAsyJC5iZ3MucHJvdG9jb2wuY2x1",
            "Yi52MS5DbHViSW52aXRhdGlvbiLLAQolUmVjZWl2ZWRJbnZpdGF0aW9uUmVt",
            "b3ZlZE5vdGlmaWNhdGlvbhIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90",
            "b2NvbC5jbHViLnYxLk1lbWJlcklkEhUKDWludml0YXRpb25faWQYAyABKAYS",
            "WQoGcmVhc29uGAQgASgOMiUuYmdzLnByb3RvY29sLkludml0YXRpb25SZW1v",
            "dmVkUmVhc29uOiJJTlZJVEFUSU9OX1JFTU9WRURfUkVBU09OX0FDQ0VQVEVE",
            "IqEBCiFTaGFyZWRTZXR0aW5nc0NoYW5nZWROb3RpZmljYXRpb24SNAoIYWdl",
            "bnRfaWQYASABKAsyIi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50",
            "SWQSRgoKYXNzaWdubWVudBgEIAEoCzIyLmJncy5wcm90b2NvbC5jbHViLnYx",
            "LkNsdWJTaGFyZWRTZXR0aW5nc0Fzc2lnbm1lbnQiiAEKHlN0cmVhbU1lbnRp",
            "b25BZGRlZE5vdGlmaWNhdGlvbhIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5w",
            "cm90b2NvbC5jbHViLnYxLk1lbWJlcklkEjQKB21lbnRpb24YAyABKAsyIy5i",
            "Z3MucHJvdG9jb2wuY2x1Yi52MS5TdHJlYW1NZW50aW9uIogBCiBTdHJlYW1N",
            "ZW50aW9uUmVtb3ZlZE5vdGlmaWNhdGlvbhI0CghhZ2VudF9pZBgBIAEoCzIi",
            "LmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkFjY291bnRJZBIuCgptZW50aW9u",
            "X2lkGAMgASgLMhouYmdzLnByb3RvY29sLlRpbWVTZXJpZXNJZCJzCihTdHJl",
            "YW1NZW50aW9uQWR2YW5jZVZpZXdUaW1lTm90aWZpY2F0aW9uEjQKCGFnZW50",
            "X2lkGAEgASgLMiIuYmdzLnByb3RvY29sLmFjY291bnQudjEuQWNjb3VudElk",
            "EhEKCXZpZXdfdGltZRgDIAEoBDKKCQoWQ2x1Yk1lbWJlcnNoaXBMaXN0ZW5l",
            "chJuCgtPbkNsdWJBZGRlZBI2LmJncy5wcm90b2NvbC5jbHViLnYxLm1lbWJl",
            "cnNoaXAuQ2x1YkFkZGVkTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5P",
            "X1JFU1BPTlNFIgyC+SsCCAGC+SsCGAEScgoNT25DbHViUmVtb3ZlZBI4LmJn",
            "cy5wcm90b2NvbC5jbHViLnYxLm1lbWJlcnNoaXAuQ2x1YlJlbW92ZWROb3Rp",
            "ZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiDIL5KwIIAoL5",
            "KwIYARKKAQoZT25SZWNlaXZlZEludml0YXRpb25BZGRlZBJELmJncy5wcm90",
            "b2NvbC5jbHViLnYxLm1lbWJlcnNoaXAuUmVjZWl2ZWRJbnZpdGF0aW9uQWRk",
            "ZWROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiDIL5",
            "KwIIA4L5KwIYARKOAQobT25SZWNlaXZlZEludml0YXRpb25SZW1vdmVkEkYu",
            "YmdzLnByb3RvY29sLmNsdWIudjEubWVtYmVyc2hpcC5SZWNlaXZlZEludml0",
            "YXRpb25SZW1vdmVkTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JF",
            "U1BPTlNFIgyC+SsCCASC+SsCGAEShgEKF09uU2hhcmVkU2V0dGluZ3NDaGFu",
            "Z2VkEkIuYmdzLnByb3RvY29sLmNsdWIudjEubWVtYmVyc2hpcC5TaGFyZWRT",
            "ZXR0aW5nc0NoYW5nZWROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9f",
            "UkVTUE9OU0UiDIL5KwIIBYL5KwIYARKAAQoUT25TdHJlYW1NZW50aW9uQWRk",
            "ZWQSPy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5tZW1iZXJzaGlwLlN0cmVhbU1l",
            "bnRpb25BZGRlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQ",
            "T05TRSIMgvkrAggGgvkrAhgBEoQBChZPblN0cmVhbU1lbnRpb25SZW1vdmVk",
            "EkEuYmdzLnByb3RvY29sLmNsdWIudjEubWVtYmVyc2hpcC5TdHJlYW1NZW50",
            "aW9uUmVtb3ZlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQ",
            "T05TRSIMgvkrAggHgvkrAhgBEpQBCh5PblN0cmVhbU1lbnRpb25BZHZhbmNl",
            "Vmlld1RpbWUSSS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5tZW1iZXJzaGlwLlN0",
            "cmVhbU1lbnRpb25BZHZhbmNlVmlld1RpbWVOb3RpZmljYXRpb24aGS5iZ3Mu",
            "cHJvdG9jb2wuTk9fUkVTUE9OU0UiDIL5KwIICIL5KwIYARpEgvkrLgosYm5l",
            "dC5wcm90b2NvbC5jbHViLnYxLkNsdWJNZW1iZXJzaGlwTGlzdGVuZXKC+SsC",
            "OAGK+SsCCAGK+SsCGAFCA4ABAA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.Club.V1.ClubTypesReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.ClubAddedNotification), global::Bgs.Protocol.Club.V1.Membership.ClubAddedNotification.Parser, new[]{ "AgentId", "Membership" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.ClubRemovedNotification), global::Bgs.Protocol.Club.V1.Membership.ClubRemovedNotification.Parser, new[]{ "AgentId", "MemberId", "ClubId", "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.ReceivedInvitationAddedNotification), global::Bgs.Protocol.Club.V1.Membership.ReceivedInvitationAddedNotification.Parser, new[]{ "AgentId", "Invitation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.ReceivedInvitationRemovedNotification), global::Bgs.Protocol.Club.V1.Membership.ReceivedInvitationRemovedNotification.Parser, new[]{ "AgentId", "InvitationId", "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.SharedSettingsChangedNotification), global::Bgs.Protocol.Club.V1.Membership.SharedSettingsChangedNotification.Parser, new[]{ "AgentId", "Assignment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.StreamMentionAddedNotification), global::Bgs.Protocol.Club.V1.Membership.StreamMentionAddedNotification.Parser, new[]{ "AgentId", "Mention" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.StreamMentionRemovedNotification), global::Bgs.Protocol.Club.V1.Membership.StreamMentionRemovedNotification.Parser, new[]{ "AgentId", "MentionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Membership.StreamMentionAdvanceViewTimeNotification), global::Bgs.Protocol.Club.V1.Membership.StreamMentionAdvanceViewTimeNotification.Parser, new[]{ "AgentId", "ViewTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClubAddedNotification : pb::IMessage<ClubAddedNotification> {
    private static readonly pb::MessageParser<ClubAddedNotification> _parser = new pb::MessageParser<ClubAddedNotification>(() => new ClubAddedNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClubAddedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubAddedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubAddedNotification(ClubAddedNotification other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      membership_ = other.HasMembership ? other.membership_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubAddedNotification Clone() {
      return new ClubAddedNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "membership" field.</summary>
    public const int MembershipFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.ClubMembershipDescription membership_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.ClubMembershipDescription Membership {
      get { return membership_; }
      set {
        membership_ = value;
      }
    }
    /// <summary>Gets whether the membership field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMembership {
      get { return membership_ != null; }
    }
    /// <summary>Clears the value of the membership field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMembership() {
      membership_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClubAddedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClubAddedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(Membership, other.Membership)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasMembership) hash ^= Membership.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasMembership) {
        output.WriteRawTag(26);
        output.WriteMessage(Membership);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasMembership) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Membership);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClubAddedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasMembership) {
        if (!HasMembership) {
          Membership = new global::Bgs.Protocol.Club.V1.ClubMembershipDescription();
        }
        Membership.MergeFrom(other.Membership);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 26: {
            if (!HasMembership) {
              Membership = new global::Bgs.Protocol.Club.V1.ClubMembershipDescription();
            }
            input.ReadMessage(Membership);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClubRemovedNotification : pb::IMessage<ClubRemovedNotification> {
    private static readonly pb::MessageParser<ClubRemovedNotification> _parser = new pb::MessageParser<ClubRemovedNotification>(() => new ClubRemovedNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClubRemovedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRemovedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRemovedNotification(ClubRemovedNotification other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      memberId_ = other.HasMemberId ? other.memberId_.Clone() : null;
      clubId_ = other.clubId_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRemovedNotification Clone() {
      return new ClubRemovedNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "member_id" field.</summary>
    public const int MemberIdFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.MemberId memberId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId MemberId {
      get { return memberId_; }
      set {
        memberId_ = value;
      }
    }
    /// <summary>Gets whether the member_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMemberId {
      get { return memberId_ != null; }
    }
    /// <summary>Clears the value of the member_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMemberId() {
      memberId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 4;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static global::Bgs.Protocol.Club.V1.ClubRemovedReason ReasonDefaultValue = global::Bgs.Protocol.Club.V1.ClubRemovedReason.None;

    private global::Bgs.Protocol.Club.V1.ClubRemovedReason reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.ClubRemovedReason Reason {
      get { if ((_hasBits0 & 2) != 0) { return reason_; } else { return ReasonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reason_ = value;
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClubRemovedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClubRemovedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(MemberId, other.MemberId)) return false;
      if (ClubId != other.ClubId) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasMemberId) hash ^= MemberId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasMemberId) {
        output.WriteRawTag(26);
        output.WriteMessage(MemberId);
      }
      if (HasClubId) {
        output.WriteRawTag(32);
        output.WriteUInt64(ClubId);
      }
      if (HasReason) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasMemberId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemberId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClubRemovedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasMemberId) {
        if (!HasMemberId) {
          MemberId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        MemberId.MergeFrom(other.MemberId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 26: {
            if (!HasMemberId) {
              MemberId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(MemberId);
            break;
          }
          case 32: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 40: {
            Reason = (global::Bgs.Protocol.Club.V1.ClubRemovedReason) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceivedInvitationAddedNotification : pb::IMessage<ReceivedInvitationAddedNotification> {
    private static readonly pb::MessageParser<ReceivedInvitationAddedNotification> _parser = new pb::MessageParser<ReceivedInvitationAddedNotification>(() => new ReceivedInvitationAddedNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceivedInvitationAddedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedInvitationAddedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedInvitationAddedNotification(ReceivedInvitationAddedNotification other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      invitation_ = other.HasInvitation ? other.invitation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedInvitationAddedNotification Clone() {
      return new ReceivedInvitationAddedNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "invitation" field.</summary>
    public const int InvitationFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.ClubInvitation invitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.ClubInvitation Invitation {
      get { return invitation_; }
      set {
        invitation_ = value;
      }
    }
    /// <summary>Gets whether the invitation field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitation {
      get { return invitation_ != null; }
    }
    /// <summary>Clears the value of the invitation field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitation() {
      invitation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceivedInvitationAddedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceivedInvitationAddedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(Invitation, other.Invitation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasInvitation) hash ^= Invitation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasInvitation) {
        output.WriteRawTag(26);
        output.WriteMessage(Invitation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasInvitation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invitation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceivedInvitationAddedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasInvitation) {
        if (!HasInvitation) {
          Invitation = new global::Bgs.Protocol.Club.V1.ClubInvitation();
        }
        Invitation.MergeFrom(other.Invitation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 26: {
            if (!HasInvitation) {
              Invitation = new global::Bgs.Protocol.Club.V1.ClubInvitation();
            }
            input.ReadMessage(Invitation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceivedInvitationRemovedNotification : pb::IMessage<ReceivedInvitationRemovedNotification> {
    private static readonly pb::MessageParser<ReceivedInvitationRemovedNotification> _parser = new pb::MessageParser<ReceivedInvitationRemovedNotification>(() => new ReceivedInvitationRemovedNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceivedInvitationRemovedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedInvitationRemovedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedInvitationRemovedNotification(ReceivedInvitationRemovedNotification other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      invitationId_ = other.invitationId_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedInvitationRemovedNotification Clone() {
      return new ReceivedInvitationRemovedNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 1) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static global::Bgs.Protocol.InvitationRemovedReason ReasonDefaultValue = global::Bgs.Protocol.InvitationRemovedReason.Accepted;

    private global::Bgs.Protocol.InvitationRemovedReason reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.InvitationRemovedReason Reason {
      get { if ((_hasBits0 & 2) != 0) { return reason_; } else { return ReasonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reason_ = value;
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceivedInvitationRemovedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceivedInvitationRemovedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (InvitationId != other.InvitationId) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (HasReason) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceivedInvitationRemovedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
          case 32: {
            Reason = (global::Bgs.Protocol.InvitationRemovedReason) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SharedSettingsChangedNotification : pb::IMessage<SharedSettingsChangedNotification> {
    private static readonly pb::MessageParser<SharedSettingsChangedNotification> _parser = new pb::MessageParser<SharedSettingsChangedNotification>(() => new SharedSettingsChangedNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SharedSettingsChangedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SharedSettingsChangedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SharedSettingsChangedNotification(SharedSettingsChangedNotification other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      assignment_ = other.HasAssignment ? other.assignment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SharedSettingsChangedNotification Clone() {
      return new SharedSettingsChangedNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "assignment" field.</summary>
    public const int AssignmentFieldNumber = 4;
    private global::Bgs.Protocol.Club.V1.ClubSharedSettingsAssignment assignment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.ClubSharedSettingsAssignment Assignment {
      get { return assignment_; }
      set {
        assignment_ = value;
      }
    }
    /// <summary>Gets whether the assignment field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssignment {
      get { return assignment_ != null; }
    }
    /// <summary>Clears the value of the assignment field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssignment() {
      assignment_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SharedSettingsChangedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SharedSettingsChangedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(Assignment, other.Assignment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasAssignment) hash ^= Assignment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasAssignment) {
        output.WriteRawTag(34);
        output.WriteMessage(Assignment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasAssignment) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Assignment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SharedSettingsChangedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Account.V1.AccountId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasAssignment) {
        if (!HasAssignment) {
          Assignment = new global::Bgs.Protocol.Club.V1.ClubSharedSettingsAssignment();
        }
        Assignment.MergeFrom(other.Assignment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Account.V1.AccountId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 34: {
            if (!HasAssignment) {
              Assignment = new global::Bgs.Protocol.Club.V1.ClubSharedSettingsAssignment();
            }
            input.ReadMessage(Assignment);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamMentionAddedNotification : pb::IMessage<StreamMentionAddedNotification> {
    private static readonly pb::MessageParser<StreamMentionAddedNotification> _parser = new pb::MessageParser<StreamMentionAddedNotification>(() => new StreamMentionAddedNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamMentionAddedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionAddedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionAddedNotification(StreamMentionAddedNotification other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      mention_ = other.HasMention ? other.mention_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionAddedNotification Clone() {
      return new StreamMentionAddedNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "mention" field.</summary>
    public const int MentionFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.StreamMention mention_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.StreamMention Mention {
      get { return mention_; }
      set {
        mention_ = value;
      }
    }
    /// <summary>Gets whether the mention field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMention {
      get { return mention_ != null; }
    }
    /// <summary>Clears the value of the mention field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMention() {
      mention_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamMentionAddedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamMentionAddedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(Mention, other.Mention)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasMention) hash ^= Mention.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasMention) {
        output.WriteRawTag(26);
        output.WriteMessage(Mention);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasMention) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mention);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamMentionAddedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasMention) {
        if (!HasMention) {
          Mention = new global::Bgs.Protocol.Club.V1.StreamMention();
        }
        Mention.MergeFrom(other.Mention);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 26: {
            if (!HasMention) {
              Mention = new global::Bgs.Protocol.Club.V1.StreamMention();
            }
            input.ReadMessage(Mention);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamMentionRemovedNotification : pb::IMessage<StreamMentionRemovedNotification> {
    private static readonly pb::MessageParser<StreamMentionRemovedNotification> _parser = new pb::MessageParser<StreamMentionRemovedNotification>(() => new StreamMentionRemovedNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamMentionRemovedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionRemovedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionRemovedNotification(StreamMentionRemovedNotification other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      mentionId_ = other.HasMentionId ? other.mentionId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionRemovedNotification Clone() {
      return new StreamMentionRemovedNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "mention_id" field.</summary>
    public const int MentionIdFieldNumber = 3;
    private global::Bgs.Protocol.TimeSeriesId mentionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.TimeSeriesId MentionId {
      get { return mentionId_; }
      set {
        mentionId_ = value;
      }
    }
    /// <summary>Gets whether the mention_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMentionId {
      get { return mentionId_ != null; }
    }
    /// <summary>Clears the value of the mention_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMentionId() {
      mentionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamMentionRemovedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamMentionRemovedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(MentionId, other.MentionId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasMentionId) hash ^= MentionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasMentionId) {
        output.WriteRawTag(26);
        output.WriteMessage(MentionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasMentionId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MentionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamMentionRemovedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Account.V1.AccountId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasMentionId) {
        if (!HasMentionId) {
          MentionId = new global::Bgs.Protocol.TimeSeriesId();
        }
        MentionId.MergeFrom(other.MentionId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Account.V1.AccountId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 26: {
            if (!HasMentionId) {
              MentionId = new global::Bgs.Protocol.TimeSeriesId();
            }
            input.ReadMessage(MentionId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamMentionAdvanceViewTimeNotification : pb::IMessage<StreamMentionAdvanceViewTimeNotification> {
    private static readonly pb::MessageParser<StreamMentionAdvanceViewTimeNotification> _parser = new pb::MessageParser<StreamMentionAdvanceViewTimeNotification>(() => new StreamMentionAdvanceViewTimeNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamMentionAdvanceViewTimeNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Membership.ClubMembershipListenerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionAdvanceViewTimeNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionAdvanceViewTimeNotification(StreamMentionAdvanceViewTimeNotification other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      viewTime_ = other.viewTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMentionAdvanceViewTimeNotification Clone() {
      return new StreamMentionAdvanceViewTimeNotification(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "view_time" field.</summary>
    public const int ViewTimeFieldNumber = 3;
    private readonly static ulong ViewTimeDefaultValue = 0UL;

    private ulong viewTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ViewTime {
      get { if ((_hasBits0 & 1) != 0) { return viewTime_; } else { return ViewTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        viewTime_ = value;
      }
    }
    /// <summary>Gets whether the "view_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasViewTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "view_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearViewTime() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamMentionAdvanceViewTimeNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamMentionAdvanceViewTimeNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ViewTime != other.ViewTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasViewTime) hash ^= ViewTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasViewTime) {
        output.WriteRawTag(24);
        output.WriteUInt64(ViewTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasViewTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ViewTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamMentionAdvanceViewTimeNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Account.V1.AccountId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasViewTime) {
        ViewTime = other.ViewTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Account.V1.AccountId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 24: {
            ViewTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
